{"version":3,"sources":["components/pages/Aboutme/profile2.png","components/Card/index.js","components/pages/Homepage/index.js","components/pages/Aboutme/index.js","components/Navbar/index.js","components/Footer/index.js","components/pages/Contact/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","props","className","alt","src","image","tech","target","rel","href","url","name","Homepage","Websites","map","Aboutme","Profilepic","Navbar","to","Footer","Date","getFullYear","ContactForm","state","company","email","message","event","preventDefault","console","log","this","axios","method","data","then","response","status","alert","resetForm","id","onSubmit","handleSubmit","bind","htmlFor","type","value","onChange","onNameChange","onCompanyChange","aria-describedby","onEmailChange","rows","onMessageChange","setState","React","Component","App","exact","path","component","Contact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"swEAAAA,EAAOC,QAAU,IAA0B,sC,mQCU5BC,G,MARF,SAAAC,GAAK,OAChB,yBAAKC,UAAU,kBACb,yBAAKA,UAAU,WAAWC,IAAI,KAAKC,IAAKH,EAAMI,QAC9C,2BAAG,+CAA6BJ,EAAMK,KAAtC,KACA,2BAAG,2CAAwB,uBAAGC,OAAO,SAASC,IAAI,sBAAsBC,KAAMR,EAAMS,KAAzD,IAAgET,EAAMU,MAAjG,Q,sBCeWC,MAff,SAAmBX,GACjB,OACE,yBAAKC,UAAU,kBACZW,EAASC,KAAI,SAAAD,GAAQ,OACtB,kBAAC,EAAD,CACAR,MAAOQ,EAASR,MAChBC,KAAMO,EAASP,KACfI,IAAKG,EAASH,IACdC,KAAME,EAASF,Y,+BCUNI,MApBf,SAAkBd,GAChB,OACE,yBAAKC,UAAU,qBACb,yBAAKA,UAAU,cAAcC,IAAI,iCAAQC,IAAKY,MAC9C,yBAAKd,UAAU,WACb,4vBAI+G,8vBCExGe,EAZA,SAAAhB,GAAK,OAClB,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,wBACb,kBAAC,IAAD,CAAMgB,GAAG,IAAIhB,UAAU,cAAa,iDAEtC,yBAAKA,UAAU,uBACb,kBAAC,IAAD,CAAMgB,GAAG,SAAShB,UAAU,aAAY,yCACxC,kBAAC,IAAD,CAAMgB,GAAG,WAAWhB,UAAU,aAAY,2CCEjCiB,EATA,SAAAlB,GAAK,OAClB,4BAAQC,UAAU,oBAChB,uBAAGK,OAAO,SAASC,IAAI,sBAAsBC,KAAK,+BAAlD,IAAiF,yBAAKP,UAAU,cAAcC,IAAI,8BAA8BC,IAAI,yDACpJ,uBAAGG,OAAO,SAASC,IAAI,sBAAsBC,KAAK,8BAAlD,IAAgF,yBAAKP,UAAU,cAAcC,IAAI,6BAA6BC,IAAI,uDAAlJ,KACA,uBAAGG,OAAO,SAASC,IAAI,sBAAsBC,KAAK,2CAAlD,IAA6F,yBAAKP,UAAU,cAAcC,IAAI,0CAA0CC,IAAI,yDAA5K,KACA,uBAAGF,UAAU,QAAb,QAAwB,IAAIkB,MAAOC,cAAnC,sB,iDCmEWC,E,kDAvEb,WAAYrB,GAAO,IAAD,8BAChB,cAAMA,IACDsB,MAAQ,CACXZ,KAAM,GACNa,QAAS,GACTC,MAAO,GACPC,QAAS,IANK,E,yDAULC,GAAO,IAAD,OACjBA,EAAMC,iBACNC,QAAQC,IAAIC,KAAKR,OACjBS,IAAM,CACJC,OAAQ,OACRvB,IAAI,6BACJwB,KAAOH,KAAKR,QACXY,MAAK,SAACC,GACsB,YAAzBA,EAASF,KAAKG,QAChBC,MAAM,iBACN,EAAKC,aAC2B,SAAzBH,EAASF,KAAKG,QACrBC,MAAM,gC,+BAMV,OACE,yBAAKpC,UAAU,qBACb,0BAAMsC,GAAG,eAAeC,SAAUV,KAAKW,aAAaC,KAAKZ,MAAOE,OAAO,QACrE,yBAAK/B,UAAU,cACb,2BAAO0C,QAAQ,QAAf,QACA,2BAAOC,KAAK,OAAO3C,UAAU,eAAesC,GAAG,OAAOM,MAAOf,KAAKR,MAAMZ,KAAMoC,SAAUhB,KAAKiB,aAAaL,KAAKZ,SAEjH,yBAAK7B,UAAU,cACb,2BAAO0C,QAAQ,WAAf,WACA,2BAAOC,KAAK,OAAO3C,UAAU,eAAe4C,MAAOf,KAAKR,MAAMC,QAASuB,SAAUhB,KAAKkB,gBAAgBN,KAAKZ,SAE7G,yBAAK7B,UAAU,cACb,2BAAO0C,QAAQ,SAAf,SACA,2BAAOC,KAAK,QAAQ3C,UAAU,eAAegD,mBAAiB,YAAYJ,MAAOf,KAAKR,MAAME,MAAOsB,SAAUhB,KAAKoB,cAAcR,KAAKZ,SAEvI,yBAAK7B,UAAU,cACb,2BAAO0C,QAAQ,WAAf,WACA,2BAAOC,KAAK,OAAO3C,UAAU,eAAekD,KAAK,IAAIN,MAAOf,KAAKR,MAAMG,QAASqB,SAAUhB,KAAKsB,gBAAgBV,KAAKZ,SAEtH,4BAAQc,KAAK,SAAS3C,UAAU,eAAhC,c,mCAMKyB,GACXI,KAAKuB,SAAS,CAAC3C,KAAMgB,EAAMpB,OAAOuC,U,sCAIpBnB,GACdI,KAAKuB,SAAS,CAAC9B,QAASG,EAAMpB,OAAOuC,U,oCAGzBnB,GACZI,KAAKuB,SAAS,CAAC7B,MAAOE,EAAMpB,OAAOuC,U,sCAGrBnB,GACdI,KAAKuB,SAAS,CAAC5B,QAASC,EAAMpB,OAAOuC,Y,GApEfS,IAAMC,W,wBC0BjBC,MAdf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKvD,UAAU,oBACb,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOwD,OAAK,EAACC,KAAK,IAAIC,UAAWhD,IACjC,kBAAC,IAAD,CAAO8C,OAAK,EAACC,KAAK,SAASC,UAAW7C,IACtC,kBAAC,IAAD,CAAO2C,OAAK,EAACC,KAAK,WAAWC,UAAWC,IACxC,kBAAC,EAAD,SCXYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtC,MAAK,SAAAuC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhD,QAAQgD,MAAMA,EAAMnD,c","file":"static/js/main.54ab7739.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile2.9e42c682.png\";","import React from \"react\";\n\nconst Card = props => (\n  <div className=\"card-component\">\n    <img className=\"card-img\" alt=\":(\" src={props.image} />\n    <p><strong>Tech used: </strong>{props.tech} </p>\n    <p><strong>Github:</strong><a target=\"_blank\" rel=\"noopener noreferrer\" href={props.url}> {props.name}</a> </p>\n  </div>\n)\n\nexport default Card;","import React from \"react\";\nimport Card from \"../../Card/index.js\";\nimport \"../../Card/index.css\";\nimport Websites from \"../../../websites.json\";\nimport \"./index.css\";\n\nfunction Homepage (props) {\n  return (\n    <div className=\"card-container\">\n      {Websites.map(Websites => (\n      <Card\n      image={Websites.image}\n      tech={Websites.tech}\n      url={Websites.url}\n      name={Websites.name}\n      />\n      ))}\n    </div>\n  )\n}\n\nexport default Homepage;","import React from \"react\";\nimport Profilepic from \"./profile2.png\";\n\n\nfunction Aboutme (props) {\n  return (\n    <div className=\"aboutme-container\">\n      <img className=\"profile-pic\" alt=\"🧙‍♂️\" src={Profilepic}></img>\n      <div className=\"aboutme\">\n        <p>My name is Andrew Griswold and I am a 24 year old aspiring programmer. I moved to Austin about two and a half years ago from New Hampshire with the intention \n          of learning as much about programming as I could. I got into computers as a kid, growing up playing super mario with my dad, I fell in love. Going on to mod \n          games like gta, I started building my own computers and was fascinated by every aspect of them. I love to learn new things and how everything works and what \n          people can make software do. The more I learn the more I want to know just exactly what is capable with technology and how we can shape the future with it. \n          I currently attend ACC as a computer science undergrad as well as the UT Austin BootCamp. I love robots. </p><p>My name is Andrew Griswold and I am a 24 year old aspiring programmer. I moved to Austin about two and a half years ago from New Hampshire with the intention \n          of learning as much about programming as I could. I got into computers as a kid, growing up playing super mario with my dad, I fell in love. Going on to mod \n          games like gta, I started building my own computers and was fascinated by every aspect of them. I love to learn new things and how everything works and what \n          people can make software do. The more I learn the more I want to know just exactly what is capable with technology and how we can shape the future with it. \n          I currently attend ACC as a computer science undergrad as well as the UT Austin BootCamp. I love robots.\n        </p>\n      </div>\n    </div>\n  );\n  };\n\nexport default Aboutme;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = props => (\n  <div className=\"nav-container\">\n    <div className=\"page-title-container\">\n      <Link to=\"/\" className=\"page-title\"><h1>Andrew Griswold</h1></Link>\n    </div>\n    <div className=\"nav-links-container\">\n      <Link to=\"/about\" className=\"nav-links\"><h3>About Me</h3></Link>\n      <Link to=\"/contact\" className=\"nav-links\"><h3>Contact</h3></Link>\n    </div>\n  </div>\n);\n\nexport default Navbar;","import React from \"react\";\n\n\nconst Footer = props => (\n  <footer className=\"footer-container\">\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/thagrza\"> <img className=\"social-icon\" alt=\"https://twitter.com/thagrza\" src=\"https://img.icons8.com/fluent/48/000000/twitter.png\"/></a>\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/ThaGrza\"> <img className=\"social-icon\" alt=\"https://github.com/ThaGrza\" src=\"https://img.icons8.com/fluent/48/000000/github.png\"/> </a>\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/agriswold7/\"> <img className=\"social-icon\" alt=\"https://www.linkedin.com/in/agriswold7/\" src=\"https://img.icons8.com/office/40/000000/linkedin.png\"/> </a>\n    <p className=\"date\" >©{(new Date().getFullYear())} Andrew Griswold</p>\n  </footer>\n)\n\nexport default Footer;","import React from \"react\";\nimport axios from \"axios\";\n\nclass ContactForm extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      name: \"\",\n      company: \"\",\n      email: \"\",\n      message: \"\"\n    };\n  }\n\n  handleSubmit(event){\n    event.preventDefault();\n    console.log(this.state);\n    axios({\n      method: \"POST\", \n      url:\"http://localhost:3000/send\", \n      data:  this.state\n    }).then((response)=>{\n      if (response.data.status === \"success\"){\n        alert(\"Message Sent.\"); \n        this.resetForm()\n      }else if(response.data.status === \"fail\"){\n        alert(\"Message failed to send.\")\n      }\n    })\n  }\n\n  render() {\n    return(\n      <div className=\"contact-container\">\n        <form id=\"contact-form\" onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Name</label>\n            <input type=\"text\" className=\"form-control\" id=\"name\" value={this.state.name} onChange={this.onNameChange.bind(this)} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"company\">Company</label>\n            <input type=\"text\" className=\"form-control\" value={this.state.company} onChange={this.onCompanyChange.bind(this)} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" className=\"form-control\" aria-describedby=\"emailHelp\" value={this.state.email} onChange={this.onEmailChange.bind(this)} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"message\">Message</label>\n            <input type=\"text\" className=\"form-control\" rows=\"5\" value={this.state.message} onChange={this.onMessageChange.bind(this)} />\n          </div>\n          <button type=\"submit\" className=\"form-button\">Submit</button>\n        </form>\n      </div>\n    );\n  };\n\n  onNameChange(event){\n    this.setState({name: event.target.value})\n    // console.log(this.state);\n  };\n\n  onCompanyChange(event){\n    this.setState({company: event.target.value})\n  };\n\n  onEmailChange(event){\n    this.setState({email: event.target.value})\n  };\n\n  onMessageChange(event){\n    this.setState({message: event.target.value})\n  };\n}\n\nexport default ContactForm;","import React from 'react';\nimport Homepage from \"./components/pages/Homepage\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Aboutme from './components/pages/Aboutme';\nimport Navbar from \"./components/Navbar/index\";\nimport Footer from \"./components/Footer/index\";\nimport Contact from \"./components/pages/Contact/index\";\nimport \"./components/Footer/index.css\"\nimport \"./components/Navbar/index.css\";\nimport \"./components/pages/Aboutme/index.css\"\nimport \"./components/pages/Contact/index.css\"\n\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"parent-container\">\n        <Navbar />\n        <Route exact path=\"/\" component={Homepage} />\n        <Route exact path=\"/about\" component={Aboutme} />\n        <Route exact path=\"/contact\" component={Contact} />\n        <Footer/>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}